{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/component.module.ts","webpack:///./src/app/components/form/form.component.html","webpack:///./src/app/components/form/form.component.ts","webpack:///./src/app/components/loader/loader.service.ts","webpack:///./src/app/components/patient-page/patient-page.component.html","webpack:///./src/app/components/patient-page/patient-page.component.ts","webpack:///./src/app/components/patient/custom-from-select-dialog.html","webpack:///./src/app/components/patient/patient-table.component.html","webpack:///./src/app/components/patient/patient-table.component.ts","webpack:///./src/app/components/records/records.component.html","webpack:///./src/app/components/records/records.component.ts","webpack:///./src/app/components/researcher-table/researcher-table.component.html","webpack:///./src/app/components/researcher-table/researcher-table.component.ts","webpack:///./src/app/components/user-manager/user-manager.component.html","webpack:///./src/app/components/user-manager/user-manager.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/model/org.hyperledger.composer.system.ts","webpack:///./src/app/model/ro.utcluj.clinictrial.trial.ts","webpack:///./src/app/model/ro.utcluj.vo.ts","webpack:///./src/app/model/transaction.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/service/CustomForm.service.ts","webpack:///./src/app/service/FormValue.service.ts","webpack:///./src/app/service/ProtocolFile.service.ts","webpack:///./src/app/service/auth.service.ts","webpack:///./src/app/service/configuration.ts","webpack:///./src/app/service/data.service.ts","webpack:///./src/app/service/historian.service.ts","webpack:///./src/app/service/patient.service.ts","webpack:///./src/app/service/queries/files-query-service.ts","webpack:///./src/app/service/queries/form-value-query-service.ts","webpack:///./src/app/service/queries/forms-query-service.ts","webpack:///./src/app/service/queries/query-service.ts","webpack:///./src/app/service/researcher.service.ts","webpack:///./src/app/service/system-service.ts","webpack:///./src/app/service/transaction-service.ts","webpack:///./src/app/service/trial.service.ts","webpack:///./src/app/utils/id-provider.service.ts","webpack:///./src/app/utils/resource-provider.ts","webpack:///./src/app/utils/utils.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"app/administration/administration.module\": [\n\t\t\"./src/app/administration/administration.module.ts\",\n\t\t\"common\",\n\t\t\"app-administration-administration-module\"\n\t],\n\t\"app/agent/agent.module\": [\n\t\t\"./src/app/agent/agent.module.ts\",\n\t\t\"app-agent-agent-module\"\n\t],\n\t\"app/crf/crf.module\": [\n\t\t\"./src/app/crf/crf.module.ts\",\n\t\t\"app-crf-crf-module~app-trial-trial-module\",\n\t\t\"common\"\n\t],\n\t\"app/home/home.module\": [\n\t\t\"./src/app/home/home.module.ts\",\n\t\t\"app-home-home-module\"\n\t],\n\t\"app/trial/trial.module\": [\n\t\t\"./src/app/trial/trial.module.ts\",\n\t\t\"app-crf-crf-module~app-trial-trial-module\",\n\t\t\"common\",\n\t\t\"app-trial-trial-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"<header _ngcontent-c0=\\\"\\\">\\n    <navbar-component></navbar-component>\\n</header>\\n<div *ngIf=\\\"objLoaderStatus\\\" class=\\\"loading-indicator\\\">\\n        <mat-spinner mode=\\\"indeterminate\\\"></mat-spinner>\\n    </div>\\n<router-outlet>\\n\\n</router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { LoaderService } from './components/loader/loader.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\n\nexport class AppComponent implements OnInit {\n  objLoaderStatus: boolean = false;\n\n  constructor(\n    private loaderService: LoaderService\n  ) {\n  }\n\n  ngOnInit() {\n    this.loaderService.loaderState.subscribe(\n      (val) => {\n        this.objLoaderStatus = val\n        console.log(val)\n      });\n  }\n}","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app.routing';\nimport { AppComponent } from './app.component';\nimport { AppMaterialModule } from './material.module';\nimport { DataService } from './service/data.service';\nimport { IdProviderService } from './utils/id-provider.service';\nimport { ProtocolFileService } from './service/ProtocolFile.service';\nimport { Configuration } from './service/configuration';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FilesQueryService } from './service/queries/files-query-service';\nimport { FormQueryService } from './service/queries/forms-query-service'\nimport { QueryService } from './service/queries/query-service'\nimport { CustomFormService } from './service/CustomForm.service'\nimport { TransactionService } from './service/transaction-service';\nimport { SystemService } from './service/system-service';\nimport { FormValueQueryService } from './service/queries/form-value-query-service'\nimport { AuthService } from './service/auth.service';\nimport { ResearcherService } from './service/researcher.service';\nimport { ComponentModule } from './components/component.module';\nimport { LoaderService } from './components/loader/loader.service';\nimport { HistorianService } from './service/historian.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AppMaterialModule,\n    ComponentModule,\n\n  ],\n  providers: [\n    Configuration,\n    DataService,\n    IdProviderService,\n    ProtocolFileService,\n    FilesQueryService,\n    QueryService,\n    CustomFormService,\n    FormQueryService,\n    TransactionService,\n    AuthService,\n    FormValueQueryService,\n    SystemService,\n    ResearcherService,\n    HistorianService,\n    LoaderService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', loadChildren: 'app/home/home.module#HomeModule'},\n  { path: 'administration', loadChildren:'app/administration/administration.module#AdministrationModule'},\n  { path: 'crf', loadChildren:'app/crf/crf.module#CRFModule'},\n  { path: 'trial', loadChildren:'app/trial/trial.module#TrialModule'},\n  { path: 'agent', loadChildren:'app/agent/agent.module#AgentModule'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { PatientPageComponent } from '../components/patient-page/patient-page.component';\nimport { AppMaterialModule } from '../material.module';\nimport { PatientService } from '../service/patient.service';\nimport { IdProviderService } from '../utils/id-provider.service';\nimport { FormComponent } from './form/form.component';\nimport { CustomFormSelectDialog, PatientTableComponent } from './patient/patient-table.component';\nimport { RecordsComponent } from './records/records.component';\nimport { ResourceProvider } from '../utils/resource-provider';\nimport { UserManagerComponent } from './user-manager/user-manager.component';\nimport { ResearcherTableComponent } from './researcher-table/researcher-table.component';\nimport { FormValueService } from '../service/FormValue.service';\n\n@NgModule({\n    imports: [\n        AppMaterialModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule\n    ],\n    providers: [\n        IdProviderService,\n        PatientService,\n        ResourceProvider,\n        FormValueService\n    ],\n    declarations: [\n        PatientTableComponent,\n        PatientPageComponent,\n        FormComponent,\n        CustomFormSelectDialog,\n        UserManagerComponent,\n        ResearcherTableComponent,\n        RecordsComponent\n    ],\n    entryComponents:[\n        PatientTableComponent,\n        CustomFormSelectDialog\n    ],\n    exports: [\n        PatientTableComponent,\n        PatientPageComponent,\n        UserManagerComponent,\n        FormComponent,\n        ResearcherTableComponent,\n        CustomFormSelectDialog,\n        RecordsComponent\n    ]\n})\nexport class ComponentModule { }","module.exports = \"<div *ngIf=\\\"isInitialised\\\">\\n\\n  <div class=\\\"center-div\\\">\\n        <mat-card class=\\\"description-card\\\">\\n          <mat-card-header class=\\\"marginAutoLR\\\">\\n            <mat-card-title><h2>{{title}}</h2></mat-card-title>\\n            <mat-card-subtitle  *ngIf=\\\"idPatient\\\"><h3>Data colected for patient with ID = {{idPatient}}  <button mat-button color=\\\"primary\\\" (click)=\\\"viewPatient(idPatient)\\\"> View Patient </button></h3> \\n             \\n            </mat-card-subtitle>\\n          </mat-card-header>\\n        </mat-card>\\n    \\n    \\n    </div>\\n    <br/>\\n    <div *ngFor=\\\"let formEntry of customForm.formMeta\\\">\\n        <mat-divider></mat-divider>\\n        <br/>\\n        <br/>\\n        <div *ngIf=\\\"formEntry.entryType == 0\\\">\\n            <mat-form-field class=\\\"input-field-width\\\">\\n                <input matInput placeholder=\\\"{{formEntry.entryName}}\\\" [(ngModel)]=\\\"formEntry.value\\\" ngDefaultControl>\\n            </mat-form-field>\\n        </div>\\n        <div *ngIf=\\\"formEntry.entryType == 1\\\">\\n            <mat-radio-group>\\n                <table>\\n                    <thead>{{formEntry.entryName}}</thead>\\n                    <tbody>\\n                        <tr>\\n                            <div>\\n                                <mat-radio-group [(ngModel)]=formEntry.value>\\n                                    <td *ngFor=\\\"let option of formEntry.entryOptions\\\">\\n                                        <mat-radio-button value=\\\"{{option}}\\\">{{option}}</mat-radio-button>\\n                                    </td>\\n                                </mat-radio-group>\\n                            </div>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </mat-radio-group>\\n        </div>\\n        <div *ngIf=\\\"formEntry.entryType == 2\\\">\\n            <mat-form-field class=\\\"input-field-width\\\">\\n                <mat-select placeholder=\\\"{{formEntry.entryName}}\\\" [(ngModel)]=\\\"formEntry.value\\\">\\n                    <mat-option *ngFor=\\\"let option of formEntry.entryOptions\\\" [value]=\\\"option\\\">\\n                        {{option}}\\n                    </mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n        </div>\\n    </div>\\n    <br/>\\n    <table *ngIf=\\\"!disabled\\\">\\n        <tbody>\\n            <tr>\\n                <td>\\n                    <button mat-raised-button (click)=\\\"save()\\\" style=\\\"float: right, down;\\\" color=\\\"primary\\\">Save</button>\\n                </td>\\n                <td>\\n                    <button mat-raised-button (click)=\\\"cancel()\\\" style=\\\"float: right, down;\\\" color=\\\"primary\\\">Cancel</button>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n    <div *ngIf=\\\"disabled\\\">\\n            <button mat-raised-button (click)=\\\"cancel()\\\" style=\\\"float: right, down;\\\" color=\\\"primary\\\">Close</button>\\n    </div>\\n</div>\"","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AddFormData, CustomForm, FormValue } from '../../model/ro.utcluj.clinictrial.trial';\nimport { CustomFormService } from '../../service/CustomForm.service';\nimport { PatientService } from '../../service/patient.service';\nimport { TransactionService } from '../../service/transaction-service';\nimport { IdProviderService } from '../../utils/id-provider.service';\nimport { ResourceProvider } from '../../utils/resource-provider';\nimport { FormValueService } from '../../service/FormValue.service';\n\n@Component({\n    selector: 'custom-form',\n    templateUrl: 'form.component.html'\n})\nexport class FormComponent implements OnInit, OnChanges {\n    @Input() idPatient: string;\n    @Input() idForm: string;\n    @Input() disabled: boolean;\n    @Input() idFormValue: string;\n    customForm: CustomForm;\n    isInitialised = false;\n    title;\n    customFormGroup;\n    basicFormControl;\n\n    constructor(\n        private _patientService: PatientService,\n        private _router: Router,\n        private _customFormService: CustomFormService,\n        private formBuilder: FormBuilder,\n        private _transactionSevice: TransactionService,\n        private _idProvider: IdProviderService,\n        private _formValueService: FormValueService\n    ) {\n\n    }\n\n    ngOnChanges() {\n\n    }\n\n    ngOnInit() {\n        console.log('Patient : ' + this.idPatient);\n        console.log('Form : ' + this.idForm);\n        this._customFormService.getAsset(this.idForm).subscribe(\n            (res) => {\n                this.customForm = res;\n                this.buildForm();\n                this.title = this.customForm.name;\n                if (this.disabled) {\n                    this.title += ' - Preview Mode';\n                    if (this.idFormValue) {\n                        this._formValueService.getAsset(this.idFormValue).subscribe(\n                            (res: FormValue) => {\n                                this.customForm.formMeta = res.formMeta;\n                                this.idPatient = res.patient.idPatient;\n                            }\n                        )\n                    }\n                }\n                this.isInitialised = true;\n            }\n        )\n    }\n\n\n    viewPatient(idPatient: string){\n        this._router.navigateByUrl('/view/'+idPatient);\n    }\n\n    buildForm() {\n        this.customFormGroup = this.formBuilder.group({\n            basicFormControl: this.formBuilder.\n                control(\"\",\n                    [Validators.required]),\n        })\n        this.basicFormControl = this.customFormGroup.get('basicFormControl');\n    }\n\n    save() {\n        var tx: AddFormData = new AddFormData();\n        tx.formMeta = this.customForm.formMeta;\n        tx.idFormData = this._idProvider.generateID();\n        tx.customForm = ResourceProvider.newCustomFormResource(this.customForm.idForm);\n        tx.patient = ResourceProvider.newPatientResource(this.idPatient);\n        this._transactionSevice.addFormData(tx)\n            .subscribe(\n                (res) => {\n                    this._router.navigate([this._router.url]);\n                }\n            )\n\n    }\n\n    cancel() {\n        this._router.navigate([this._router.url]);\n    }\n\n    generateTimestamp() {\n        var date = new Date();\n        return date.toLocaleDateString();\n    }\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class LoaderService {\n\n    private loaderSubject = new Subject<any>();\n    loaderState = this.loaderSubject.asObservable();\n    constructor() { }\n    show() {\n            this.loaderSubject.next(<any> true);\n        }\n    hide() {\n            this.loaderSubject.next(<any> false);\n        }\n}","module.exports = \"<table width=\\\"100%\\\">\\n    <tbody>\\n        <tr>\\n            <td width=\\\"60%\\\">\\n                <mat-form-field class=\\\"input-field-full-width\\\">\\n                    <input matInput placeholder=\\\"Search patients...\\\" [(ngModel)]=\\\"searchQuery\\\">\\n                </mat-form-field>\\n            </td>\\n            <td width=\\\"40%\\\">\\n                <button mat-raised-button (click)=\\\"search()\\\" color=\\\"primary\\\">Search</button>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n<br/>\\n\\n<patient-table [allPatientsDataSource]=\\\"allPatientsDataSource\\\" [adminMode]=false [idTrial]=\\\"idTrial\\\" [enrol]=true></patient-table>\\n<br/>\\n<button mat-raised-button (click)=\\\"cancel()\\\" style=\\\"float: right, down;\\\" color=\\\"primary\\\">Cancel</button>\"","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { Patient } from '../../model/ro.utcluj.clinictrial.base';\nimport { PatientService } from '../../service/patient.service';\n\n@Component({\n    selector: 'patient-page',\n    templateUrl: 'patient-page.component.html'\n})\nexport class PatientPageComponent implements OnInit, OnChanges {\n    @Input() idTrial: string;\n\n    allPatients: Patient[] = [];\n\n    allPatientsDataSource: MatTableDataSource<Patient>;\n    searchQuery = \"\";\n\n    constructor(\n        private _patientService: PatientService,\n        private _router: Router\n    ) {\n\n    }\n\n    ngOnChanges() {\n        console.log(this.idTrial)\n    }\n    ngOnInit() {\n\n    }\n\n    cancel() {\n        this._router.navigate([this._router.url]);\n    }\n\n    search() {\n        console.log(\"Searching for ... \" + this.searchQuery);\n        if (this.searchQuery == \"\") {\n            this._patientService.getAll()\n                .subscribe(\n                    (res) => {\n                        this.allPatientsDataSource = new MatTableDataSource<Patient>(res);\n                    },\n                    (err) => {\n                        alert(\"Something went wrong while searching! Please try again\");\n                    }\n                )\n        }\n    }\n}","module.exports = \"<h1 mat-dialog-title>Select the form to complete:</h1>\\n<mat-dialog-content>\\n    <table>\\n        <tbody>\\n            <tr *ngFor=\\\"let form of data.forms\\\">\\n                <td>\\n                    {{form.name}}\\n                </td>\\n                <td>\\n                 \\n                        <button mat-button [mat-dialog-close]=\\\"form.idForm\\\">Select</button>\\n                 \\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n<button mat-button (click)=\\\"onNoClick()\\\">Cancel</button>\\n</mat-dialog-actions>\"","module.exports = \"<div *ngIf=\\\"displayTable\\\">\\n    <div class=\\\"table-container mat-elevation-z8\\\">\\n        <mat-table #table [dataSource]=\\\"allPatientsDataSource\\\">\\n\\n            <!-- Patient ID column -->\\n            <ng-container matColumnDef=\\\"PatientID\\\">\\n                <mat-header-cell *matHeaderCellDef> PatientID </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let patient\\\"> {{patient.idPatient}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Name column -->\\n            <ng-container matColumnDef=\\\"Name\\\">\\n                <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let patient\\\"> {{patient.person.firstName}} {{patient.person.lastName}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Gender column -->\\n            <ng-container matColumnDef=\\\"Gender\\\">\\n                <mat-header-cell *matHeaderCellDef> Gender </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let patient\\\"> {{patient.person.gender}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- Birthdate column -->\\n            <ng-container matColumnDef=\\\"Birthdate\\\">\\n                <mat-header-cell *matHeaderCellDef> Birthdate </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let patient\\\"> {{patient.person.birthDetails.dateOfBirth}}</mat-cell>\\n            </ng-container>\\n\\n            <!-- View link column -->\\n            <ng-container matColumnDef=\\\"Actions\\\">\\n                <mat-header-cell *matHeaderCellDef>  </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let patient\\\">\\n                    <a mat-button [routerLink]=\\\"['/view',patient.idPatient]\\\" color=\\\"primary\\\">\\n                        <i class=\\\"material-icons\\\">pageview</i>\\n                    </a>\\n                    <a mat-button (click)=\\\"openFormSelection(patient)\\\" color=\\\"primary\\\" *ngIf=\\\"!adminMode\\\">\\n                        <i class=\\\"material-icons\\\">assignment</i>\\n                    </a>\\n                    <a mat-button [routerLink]=\\\"['new',patient.idPatient]\\\" *ngIf=\\\"adminMode\\\" color=\\\"primary\\\">\\n                        <i class=\\\"material-icons\\\">mode_edit</i>\\n                    </a>\\n                    <a mat-button (click)=\\\"deletePatient(patient)\\\" *ngIf=\\\"adminMode\\\" color=\\\"primary\\\">\\n                        <i class=\\\"material-icons\\\">delete_sweep</i>\\n                    </a>\\n                </mat-cell>\\n            </ng-container>\\n\\n            <!-- Enroll link column -->\\n            <ng-container matColumnDef=\\\"Enroll\\\" *ngIf=\\\"enrol\\\">\\n                <mat-header-cell *matHeaderCellDef>  </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let patient\\\">\\n                    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"enrollPatient(patient)\\\">\\n                        Enrol\\n                    </button>\\n                </mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n\\n        </mat-table>\\n    </div>\\n</div>\\n<div *ngIf=\\\"displayForm\\\">\\n    <custom-form [idPatient]=\\\"patientSelection\\\" [idForm]=\\\"formSelection\\\"></custom-form>\\n</div>\"","import { Component, Input, OnInit, ViewChild, Inject } from '@angular/core';\nimport { MatPaginator, MatTableDataSource } from '@angular/material';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { Patient } from '../../model/ro.utcluj.clinictrial.base';\nimport { EnrolPatientTransaction } from '../../model/transaction';\nimport { PatientService } from '../../service/patient.service';\nimport { TransactionService } from '../../service/transaction-service';\nimport { ResourceProvider } from '../../utils/resource-provider';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormQueryService } from '../../service/queries/forms-query-service';\n\n@Component({\n    selector: 'patient-table',\n    templateUrl: 'patient-table.component.html'\n})\nexport class PatientTableComponent implements OnInit {\n    private errorMessage;\n    navigationSubscription;\n    allPatients: Patient[] = [];\n    enrolPatientTransaction: EnrolPatientTransaction;\n    forms: any[] = [];\n    formSelection;\n    patientSelection;\n\n    displayTable = true;\n    displayForm = false;\n\n    @Input() allPatientsDataSource: MatTableDataSource<Patient>;\n    @Input() adminMode: boolean;\n    @Input() idTrial: string;\n    @Input() enrol: boolean;\n    adminDisplayedColumns = ['PatientID', 'Name', 'Gender', 'Birthdate', 'Actions'];\n    userDisplayedColumns = ['PatientID', 'Name', 'Gender', 'Birthdate', 'Actions'];\n    displayedColumns: string[] = [];\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    constructor(\n        private _patientService: PatientService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _transactionService: TransactionService,\n        private dialog: MatDialog,\n        private _formQueryService: FormQueryService\n    ) {\n        this.navigationSubscription = this._router.events.subscribe((e: any) => {\n            // If it is a NavigationEnd event re-initalise the component\n            if (e instanceof NavigationEnd) {\n                console.log(\"Loading table patient data....\")\n                console.log(this.allPatientsDataSource);\n                this.displayTable = true;\n                this.displayForm = false;\n            }\n        });\n    }\n\n    ngOnInit() {\n        console.log(this.idTrial)\n        this._formQueryService.findCustomFormsByTrial(this.idTrial)\n            .subscribe(\n                (res) => {\n                    this.forms = res;\n                }\n            )\n        if (this.adminMode) {\n            this.displayedColumns = this.adminDisplayedColumns;\n        } else {\n            this.displayedColumns = this.userDisplayedColumns;\n            if (this.enrol) {\n                this.displayedColumns.push('Enroll');\n            }\n        }\n    }\n\n    ngOnChanges() {\n\n    }\n\n    ngAfterViewInit() {\n        //  this.allPatientsDataSource.paginator = this.paginator;\n    }\n\n    enrollPatient(patient: Patient) {\n        this.enrolPatientTransaction = new EnrolPatientTransaction();\n        this.enrolPatientTransaction.patient = ResourceProvider.newPatientResource(patient.idPatient);\n        this.enrolPatientTransaction.trial = ResourceProvider.newTrialResource(this.idTrial);\n        console.log(patient.trial);\n        this._transactionService.enrolPatientTransaction(this.enrolPatientTransaction).subscribe(\n            (res) => this._router.navigate([this._router.url])\n        )\n    }\n\n    deletePatient(patient) {\n        console.log(patient.idPatient);\n        this._patientService.deleteAsset(patient.idPatient)\n            .toPromise()\n            .then(() => {\n                this.errorMessage = null;\n                this._router.navigate(['administration'])\n            })\n            .catch((error) => {\n                if (error == 'Server error') {\n                    alert(\"Could not connect to REST server. Please check your configuration details\")\n                }\n                else if (error == '404 - Not Found') {\n                    alert(\"404 - Could not find API route. Please check your available APIs.\")\n                }\n                else {\n                    alert(error);\n                }\n            });\n    }\n\n    openFormSelection(patient): void {\n        console.log('Opening dialog')\n        console.log(this.forms);\n        let dialogRef = this.dialog.open(CustomFormSelectDialog, {\n            width: '25%',\n            data: { forms: this.forms }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            console.log(result);\n            this.formSelection = result;\n            this.patientSelection = patient.idPatient;\n            this.onFormSelect();\n        });\n\n    }\n\n    onFormSelect() {\n        if (this.formSelection) {\n            this.displayForm = true;\n            this.displayTable = false;\n        }\n    }\n}\n\n@Component({\n    selector: 'custom-from-select-dialog',\n    templateUrl: 'custom-from-select-dialog.html',\n})\nexport class CustomFormSelectDialog {\n\n    constructor(\n        public dialogRef: MatDialogRef<CustomFormSelectDialog>,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n        console.log(data.forms);\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n}\n\n","module.exports = \"<div *ngIf=\\\"isInitialised\\\">\\n    <table *ngIf=\\\"!idFormExternal\\\">\\n        <tbody>\\n            <tr>\\n                <td>\\n                    <mat-form-field>\\n                        <mat-select placeholder=\\\"Select records to view\\\" [(value)]=\\\"selectedForm\\\">\\n                            <mat-option value='None'> - </mat-option>\\n                            <mat-option *ngFor=\\\"let form of customForms\\\" [value]=\\\"form.idForm\\\">\\n                                {{ form.name }}\\n                            </mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </td>\\n                <td>\\n                    <button mat-raised-button (click)=\\\"onSelect()\\\" color=\\\"primary\\\">Select</button>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n    <div *ngIf=\\\"displayTable\\\">\\n        <div class=\\\"table-container mat-elevation-z8\\\">\\n            <mat-table #table [dataSource]=\\\"recordsDataSource\\\">\\n                <ng-container matColumnDef=\\\"PatientID\\\">\\n                    <mat-header-cell *matHeaderCellDef> PatientID </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let rec\\\"> test </mat-cell>\\n                </ng-container>\\n\\n                <ng-container matColumnDef=\\\"Date\\\">\\n                    <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let rec\\\"> {{rec.date}} </mat-cell>\\n                </ng-container>\\n                <ng-container matColumnDef=\\\"Time\\\">\\n                    <mat-header-cell *matHeaderCellDef> Time </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let rec\\\"> {{rec.time}} </mat-cell>\\n                </ng-container>\\n\\n                <!-- Records columns -->\\n                <ng-container *ngFor=\\\"let col of dataColumns; let i = index\\\" [matColumnDef]=\\\"col\\\">\\n                    <mat-header-cell *matHeaderCellDef> {{col}} </mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let rec\\\"> {{rec.formMeta[i].value}} </mat-cell>\\n                </ng-container>\\n                <mat-header-row *matHeaderRowDef=\\\"tableColumns\\\"></mat-header-row>\\n                <mat-row *matRowDef=\\\"let row; columns: tableColumns;\\\"></mat-row>\\n            </mat-table>\\n        </div>\\n    </div>\\n</div>\"","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CustomFormService } from '../../service/CustomForm.service';\nimport { PatientService } from '../../service/patient.service';\nimport { FormQueryService } from '../../service/queries/forms-query-service';\nimport { CustomForm, FormValue } from '../../model/ro.utcluj.clinictrial.trial';\nimport { MatTableDataSource } from '@angular/material';\nimport { FormValueQueryService } from '../../service/queries/form-value-query-service';\n\n@Component({\n    selector: 'records-component',\n    templateUrl: 'records.component.html'\n})\nexport class RecordsComponent implements OnInit, OnChanges {\n    @Input() idTrial: string;\n    @Input() idFormExternal: string;\n\n    private NONE: string = \"None\";\n    private idForm;\n    private customForm;\n    private customForms: CustomForm[] = [];\n    private isInitialised = false;\n    private displayTable = false;\n    private selectedForm = this.NONE;\n    private records: FormValue[] = [];\n    private recordsDataSource: MatTableDataSource<FormValue>;\n\n    private tableColumns = [];\n    private dataColumns = [];\n\n    constructor(\n        private _patientService: PatientService,\n        private _customFormService: CustomFormService,\n        private _router: Router,\n        private _formQueryService: FormQueryService,\n        private _formValueQueryService: FormValueQueryService\n    ) {\n\n    }\n\n    onSelect() {\n        console.log(\"Display records for : \" + this.selectedForm)\n        this.tableColumns = [];\n        this.dataColumns = [];\n        if (this.selectedForm == this.NONE) {\n            alert(\"Please select the data to display!\")\n            return;\n        } else {\n            this._formValueQueryService.findDataForCustomForm(this.selectedForm).subscribe(\n                (res: FormValue[]) => {\n                    console.log(res);\n                    this.tableColumns.push(\"PatientID\");\n                    this.tableColumns.push(\"Date\");\n                    this.tableColumns.push(\"Time\");\n                    if (res.length > 0) {\n                        var value = res[0];\n                        for (let meta of value.formMeta) {\n                            this.tableColumns.push(meta.entryName);\n                            this.dataColumns.push(meta.entryName);\n                        }\n                    } else {\n                        alert(\"No data to display\");\n                        return;\n                    }\n                    this.recordsDataSource = new MatTableDataSource<FormValue>(res);\n                    this.displayTable = true;\n                }\n\n\n            )\n        }\n    }\n\n    ngOnChanges() {\n        console.log(this.idTrial)\n    }\n\n    ngOnInit() {\n        if (this.idFormExternal) {\n            this.idForm = this.idFormExternal;\n            this.onSelect();\n        } else {\n            this._formQueryService.findCustomFormsByTrial(this.idTrial).subscribe(\n                (res) => {\n                    this.customForms = res;\n                    console.log(res);\n                    this.isInitialised = true;\n                    this.displayTable = false;\n                }\n            )\n        }\n\n    }\n\n    getCustomForm(idForm) {\n        this._customFormService.getAsset(this.idForm).subscribe(\n            (res) => {\n                this.customForm = res;\n            }\n        )\n    }\n\n\n\n    cancel() {\n        this._router.navigate([this._router.url]);\n    }\n\n}","module.exports = \"<div class=\\\"table-container mat-elevation-z8 \\\">\\n    <div class=\\\"table-container \\\">\\n        <mat-table #table [dataSource]=\\\"dataSource\\\" style=\\\"max-height: 50vh\\\">\\n            <!-- Researcher ID column -->\\n            <ng-container matColumnDef=\\\"ResearcherID\\\">\\n                <mat-header-cell *matHeaderCellDef> ResearcherID </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let res\\\"> {{res.idResearcher}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Researcher name column -->\\n            <ng-container matColumnDef=\\\"Name\\\">\\n                <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let res\\\"> {{res.person.firstName}} {{res.person.lastName}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Researcher email column -->\\n            <ng-container matColumnDef=\\\"E-mail\\\">\\n                <mat-header-cell *matHeaderCellDef> E-mail </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let res\\\"> {{res.person.contactDetails.email}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Actions column -->\\n            <ng-container matColumnDef=\\\"Actions\\\" class=\\\"mat-column-Actions\\\">\\n                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let res\\\">\\n                    <a mat-button (click)=\\\"removeResearcher(res)\\\" color=\\\"primary\\\" *ngIf=\\\"activeMode\\\">\\n                        <i class=\\\"material-icons\\\">clear</i>\\n                    </a>\\n\\n                    <a mat-button (click)=\\\"addResearcher(res)\\\" color=\\\"primary\\\" *ngIf=\\\"!activeMode\\\">\\n                        <i class=\\\"material-icons\\\">add</i>\\n                    </a>\\n                </mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *matHeaderRowDef=\\\"tableColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: tableColumns;\\\"></mat-row>\\n        </mat-table>\\n    </div>\\n</div>\"","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator } from '@angular/material';\nimport { Researcher } from '../../model/ro.utcluj.clinictrial.base';\nimport { AddResearcherToTrial, RemoveResearcherFromTrial } from '../../model/transaction';\nimport { ResourceProvider } from '../../utils/resource-provider';\nimport { TransactionService } from '../../service/transaction-service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'researcher-table',\n    templateUrl: 'researcher-table.component.html'\n})\nexport class ResearcherTableComponent implements OnInit {\n\n    constructor(\n        private _transactionService : TransactionService,\n        private _router: Router\n    ){\n\n    }\n\n    displayTable = false;\n\n    @Input() dataSource: MatTableDataSource<Researcher>;\n    @Input() activeMode: boolean;\n    @Input() idTrial: string;\n\n    private tableColumns = ['ResearcherID', 'Name', 'E-mail', 'Actions'];\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    ngOnInit() {\n        this.displayTable = true;\n    }\n\n    addResearcher(res: Researcher) {\n        var tx = new AddResearcherToTrial();\n        tx.researcher = ResourceProvider.newResearcherResource(res.idResearcher);\n        tx.trial = ResourceProvider.newTrialResource(this.idTrial);\n        this._transactionService.addResearcherToTrial(tx).subscribe(\n            (res) =>{\n                this._router.navigate([this._router.url])\n            },\n            (err: Error)=>{\n                alert(err.message);\n            }\n        );\n    }\n\n    removeResearcher(res: Researcher) {\n        var tx = new RemoveResearcherFromTrial();\n        tx.researcher = ResourceProvider.newResearcherResource(res.idResearcher);\n        tx.trial = ResourceProvider.newTrialResource(this.idTrial);\n        this._transactionService.removeResearcherFromTrial(tx).subscribe(\n            (res) =>{\n                this._router.navigate([this._router.url])\n            },\n            (err: Error)=>{\n                alert(err.message);\n            }\n        );\n    }\n\n}\n\n","module.exports = \"<div *ngIf=\\\"displayTable\\\">\\n    <div class=\\\"center-div\\\">\\n        <mat-card style=\\\"width:50%; height: 65vh;\\\">\\n            <mat-card-header>\\n                <mat-card-title>\\n                    <h1>Add users</h1>\\n                </mat-card-title>\\n                <mat-card-subtitle>\\n                    <h2></h2>\\n                </mat-card-subtitle>\\n\\n            </mat-card-header>\\n            <mat-card-content>\\n                <div>\\n                    <table width=\\\"100%\\\">\\n                        <tbody>\\n                            <tr>\\n                                <td width=\\\"60%\\\">\\n                                    <mat-form-field class=\\\"input-field-full-width\\\">\\n                                        <input matInput placeholder=\\\"Researcher name\\\" [(ngModel)]=\\\"searchQuery\\\">\\n                                    </mat-form-field>\\n                                </td>\\n                                <td width=\\\"40%\\\">\\n                                    <button mat-raised-button (click)=\\\"search()\\\" color=\\\"primary\\\">Search</button>\\n                                </td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                    <br/>\\n                </div>\\n                <researcher-table [dataSource] = \\\"allUsersDataSource\\\" [activeMode] = \\\"false\\\" [idTrial]=\\\"idTrial\\\"></researcher-table>\\n            </mat-card-content>\\n        </mat-card>\\n        &nbsp;\\n        <mat-card style=\\\"width: 50%; height: 65vh;\\\">\\n            <mat-card-header>\\n                <mat-card-title>\\n                    <h1>Active users</h1>\\n                </mat-card-title>\\n\\n            </mat-card-header>\\n            <mat-card-content>\\n                <br/>\\n                <br/>\\n                <br/>\\n                <br/>\\n              <researcher-table [dataSource] = \\\"usersDataSource\\\" [activeMode] = \\\"true\\\" [idTrial]=\\\"idTrial\\\"></researcher-table>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TrialService } from '../../service/trial.service';\nimport { Trial } from '../../model/ro.utcluj.clinictrial.trial';\nimport { MatTableDataSource } from '@angular/material';\nimport { Researcher } from '../../model/ro.utcluj.clinictrial.base';\nimport { ResearcherService } from '../../service/researcher.service';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Component({\n    selector: 'user-manager',\n    templateUrl: 'user-manager.component.html'\n})\nexport class UserManagerComponent implements OnInit {\n\n    @Input() idTrial;\n    private trial: Trial;\n    private usersDataSource: MatTableDataSource<Researcher>;\n    private displayTable: boolean;\n    private searchQuery = \"\";\n    private allUsersDataSource: MatTableDataSource<Researcher>;\n    navigationSubscription;\n\n    constructor(\n        private _trialService: TrialService,\n        private _researcherService: ResearcherService,\n        private _router: Router\n    ) {\n        this.navigationSubscription = this._router.events.subscribe((e: any) => {\n            // If it is a NavigationEnd event re-initalise the component\n            if (e instanceof NavigationEnd) {\n                console.log(\"loading table data....\")\n                this._trialService.getAsset(this.idTrial).subscribe(\n                    (res) => {\n                        this.trial = res;\n                        this.usersDataSource = new MatTableDataSource<Researcher>(this.trial.responsibles);\n                        this.displayTable = true;\n                    }\n                )\n            }\n        });\n\n    }\n\n    ngOnInit() {\n        this._trialService.getAsset(this.idTrial).subscribe(\n            (res) => {\n                this.trial = res;\n                this.usersDataSource = new MatTableDataSource<Researcher>(this.trial.responsibles);\n                this.displayTable = true;\n            }\n        )\n    }\n\n    search() {\n        this._researcherService.getAll().subscribe(\n            (res) => {\n                if (this.searchQuery == \"\") {\n                    this.allUsersDataSource = new MatTableDataSource<Researcher>(res);\n                }\n            }\n        )\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n  ]\n})\nexport class AppMaterialModule {}\n","// export namespace org.hyperledger.composer.system{\n   export abstract class Asset {\n   }\n   export abstract class Participant {\n   }\n   export abstract class Transaction {\n      transactionId: string;\n      timestamp: Date;\n   }\n   export abstract class Event {\n      eventId: string;\n      timestamp: Date;\n   }\n   export abstract class Registry extends Asset {\n      registryId: string;\n      name: string;\n      type: string;\n      system: boolean;\n   }\n   export class AssetRegistry extends Registry {\n   }\n   export class ParticipantRegistry extends Registry {\n   }\n   export class TransactionRegistry extends Registry {\n   }\n   export class Network extends Asset {\n      networkId: string;\n      runtimeVersion: string;\n   }\n   export class NetworkAdmin extends Participant {\n      participantId: string;\n   }\n   export class HistorianRecord extends Asset {\n      transactionId: string;\n      transactionType: string;\n      transactionInvoked: Transaction;\n      participantInvoking: Participant;\n      identityUsed: Identity;\n      eventsEmitted: any[];\n      transactionTimestamp: Date;\n   }\n   export abstract class RegistryTransaction extends Transaction {\n      targetRegistry: Registry;\n   }\n   export abstract class AssetTransaction extends RegistryTransaction {\n      resources: Asset[];\n   }\n   export abstract class ParticipantTransaction extends RegistryTransaction {\n      resources: Participant[];\n   }\n   export class AddAsset extends AssetTransaction {\n   }\n   export class UpdateAsset extends AssetTransaction {\n   }\n   export class RemoveAsset extends AssetTransaction {\n      resourceIds: string[];\n   }\n   export class AddParticipant extends ParticipantTransaction {\n   }\n   export class UpdateParticipant extends ParticipantTransaction {\n   }\n   export class RemoveParticipant extends ParticipantTransaction {\n      resourceIds: string[];\n   }\n   export enum IdentityState {\n      ISSUED,\n      BOUND,\n      ACTIVATED,\n      REVOKED,\n   }\n   export class Identity extends Asset {\n      identityId: string;\n      name: string;\n      issuer: string;\n      certificate: string;\n      state: IdentityState;\n      participant: Participant;\n   }\n   export class IssueIdentity extends Transaction {\n      participant: Participant;\n      identityName: string;\n   }\n   export class BindIdentity extends Transaction {\n      participant: Participant;\n      certificate: string;\n   }\n   export class ActivateCurrentIdentity extends Transaction {\n   }\n   export class RevokeIdentity extends Transaction {\n      identity: Identity;\n   }\n   export class StartBusinessNetwork extends Transaction {\n      logLevel: string;\n      bootstrapTransactions: Transaction[];\n   }\n   export class ResetBusinessNetwork extends Transaction {\n   }\n   export class SetLogLevel extends Transaction {\n      newLogLevel: string;\n   }\n// }\n","import {Asset} from './org.hyperledger.composer.system';\nimport {Participant} from './org.hyperledger.composer.system';\nimport {Transaction} from './org.hyperledger.composer.system';\nimport {Event} from './org.hyperledger.composer.system';\nimport {Patient,Researcher} from './ro.utcluj.clinictrial.base';\nimport {ResearchSite} from './ro.utcluj.clinictrial.organisation';\n// export namespace ro.utcluj.clinictrial.trial{\n   export enum TrialStatus {\n      REGISTERED,\n      NOT_RECRUITING,\n      RECRUITING,\n      RECRUITING_INVITATION,\n      APPROVED,\n      SUSPENDED,\n      REJECTED,\n      IN_PROGRES,\n      FINISHED,\n   }\n   export enum TrialPhase {\n      PHASE_1,\n      PHASE_2,\n      PHASE_3,\n      PHASE_4,\n   }\n   export enum AgeGroup {\n      CHILD,\n      ADULT,\n      SENIOR,\n   }\n   export enum Gender {\n      MALE,\n      FEMALE,\n      ALL,\n   }\n   export class Trial extends Asset {\n      idTrial: string;\n      studyName: string;\n      description: string;\n      tasks: TodoElement[];\n      status: TrialStatus;\n      researchSites: ResearchSite[];\n      organiser: ResearchSite;\n      participants: Patient[];\n      responsibles: Researcher[];\n   }\n   export class TodoElement {\n      taskName: string;\n      completed: boolean;\n   }\n   export class RegisterTrialTransaction extends Transaction {\n      idTrial: string;\n      studyName: string;\n      organiser: string;\n      responsibles: string[];\n   }\n   export class RegisterTrialEvent extends Event {\n      idTrial: string;\n      studyName: string;\n      organiser: ResearchSite;\n      responsibles: Researcher[];\n   }\n   export class TableRow {\n      cell: string[];\n      timestamp: string;\n   }\n   export class CustomForm extends Asset {\n      idForm: string;\n      name: string;\n      dateCreated: string;\n      formMeta: FormEntry[];\n      trial: Trial;\n   }\n   export class CreateCustomForm extends Transaction {\n      idForm: string;\n      name: string;\n      dateCreated: string;\n      formMeta: FormEntry[];\n      trial: string;\n   }\n   export class CreateCustomFormEvent extends Event {\n      form: CustomForm;\n      trial: Trial;\n   }\n   export enum EntryType {\n      FORM_FIELD,\n      CHOICE_FIELD,\n      SELECTOR_FIELD,\n   }\n   export class FormValue extends Asset {\n      idFormData: string;\n      date: string;\n      time: string;\n      formMeta: FormEntry[];\n      patient: Patient;\n      customForm: CustomForm;\n   }\n   export class FormEntry {\n      entryName: string;\n      entryType: number;\n      entryOptions: string[];\n      value: string;\n   }\n   export class ProtocolFile extends Asset {\n      fileID: string;\n      fileContent: string;\n      fileType: string;\n      fileTimestamp: string;\n      trial: Trial;\n   }\n   export class MedicalHistory extends Asset {\n      idMedicalHistory: string;\n      records: MedicalRecord[];\n      patient: Patient;\n   }\n   export class MedicalRecord {\n      recordType: string;\n      title: string;\n      description: string;\n      date: string;\n   }\n   export class EnrolPatientTransaction extends Transaction {\n      patient: string;\n      trial: string;\n   }\n   export class EnrolPatientEvent extends Event {\n      patient: Patient;\n      trial: Trial;\n   }\n   export class RemoveResearcherFromTrial extends Transaction {\n      trial: string;\n      researcher: string;\n   }\n   export class RemoveResearcherEvent extends Event {\n      trial: Trial;\n      researcher: Researcher;\n   }\n   export class AddResearcherToTrial extends Transaction {\n      trial: string;\n      researcher: string;\n   }\n   export class AddResearcherEvent extends Event {\n      trial: Trial;\n      researcher: Researcher;\n   }\n   export class AddFormData extends Transaction {\n      idFormData: string;\n      formMeta: FormEntry[];\n      patient: string;\n      customForm: string;\n   }\n   export class AddFormDataEvent extends Event {\n      idFormData: string;\n      formMeta: FormEntry[];\n      patient: Patient;\n      customForm: CustomForm;\n   }\n   export class GetResponsibles extends Transaction {\n      trial: Trial;\n   }\n   export class SetupMockData extends Transaction {\n      param: string;\n   }\n// }","export class OrganisationVO {\n    orgID  : string\n    orgName : string\n    orgInternalAddress : string\n    orgType : string\n    city: string;\n    country: string;\n    locality: string;\n    region: string;\n    street: string;\n    postalCode: string;\n}\n\nexport class FileVO{\n    fileID : string\n    fileContent : string\n    fileType : string\n    fileTimestamp : string\n    fileVersion : string\n    trial : string\n}\nexport enum EntryType{\n    FORM_FIELD,\n    CHOICE_FIELD,\n    SELECTOR_FIELD\n}\n\nexport enum AccountType{\n    RESEARCHER,\n    ADMIN,\n    AGENT,\n    SPONSOR\n}\n\nexport class FormVO{\n    entryName : string\n    entryType : number\n    entryOptions : string[]\n    value : string\n}\n\nexport class AuthenticationVO{\n    userID: string\n    displayName: string\n    accountType: AccountType\n}","import { Transaction } from './org.hyperledger.composer.system';\nimport { Researcher } from './ro.utcluj.clinictrial.base';\nimport { ResearchSite } from './ro.utcluj.clinictrial.organisation';\nexport class EnrolPatientTransaction extends Transaction {\n    patient: string;\n    trial: string;\n}\nexport class RemoveResearcherFromTrial extends Transaction {\n    trial: string;\n    researcher: string;\n}\nexport class AddResearcherToTrial extends Transaction {\n    trial: string;\n    researcher: string;\n}\nexport class SetupMockData extends Transaction {\n    param: string;\n}\nexport class RegisterTrialTransaction extends Transaction {\n    idTrial: string;\n    studyName: string;\n    organiser: ResearchSite;\n    responsibles: Researcher[];\n}","module.exports = \"<mat-toolbar _ngcontent-c0=\\\"\\\" color=\\\"primary\\\">\\n    <mat-toolbar-row _ngcontent-c0>\\n        <span>\\n            <a mat-button routerLink=\\\"/home\\\">Clinic Trials App</a>\\n        </span>\\n        <span>\\n            <button mat-button [matMenuTriggerFor]=\\\"menu\\\">Menu\\n                <mat-icon>arrow_drop_down</mat-icon>\\n            </button>\\n        </span>\\n        <span class=\\\"flex-fill\\\"></span>\\n        <div *ngIf=\\\"_authService.getUser()\\\">\\n        <span>\\n            <mat-icon>account_circle </mat-icon>\\n            <br/> {{_authService.getUser()}}\\n        </span>\\n        <button mat-button (click)=\\\"_authService.logout()\\\">Log Out</button>\\n    </div>\\n    </mat-toolbar-row>\\n</mat-toolbar>\\n\\n<mat-menu #menu=\\\"matMenu\\\">\\n    <button mat-menu-item routerLink=\\\"/administration\\\">Administration</button>\\n    <button mat-menu-item routerLink=\\\"/trial\\\">Trials</button>\\n    <button mat-menu-item routerLink=\\\"/agent\\\">Agent</button>\\n</mat-menu>\"","import { Component } from '@angular/core';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'navbar-component',\n  templateUrl: 'navbar.component.html'\n})\nexport class NavbarComponent {\n\n  currentUser = \"\";\n\n  constructor(\n    private _authService : AuthService\n  ){\n  }\n\n  \n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { Observable } from 'rxjs/Observable';\nimport { CustomForm } from '../model/ro.utcluj.clinictrial.trial';\nimport 'rxjs/Rx';\n\n// Can be injected into a constructor\n@Injectable()\nexport class CustomFormService {\n\n\t\n\t\tprivate NAMESPACE: string = 'CustomForm';\n\t\n\n\n\n    constructor(private dataService: DataService<CustomForm>) {\n    };\n\n    public getAll(): Observable<CustomForm[]> {\n        return this.dataService.getAll(this.NAMESPACE);\n    }\n\n    public getAsset(id: any): Observable<CustomForm> {\n      return this.dataService.getSingle(this.NAMESPACE, id);\n    }\n\n    public addAsset(itemToAdd: any): Observable<CustomForm> {\n      return this.dataService.add(this.NAMESPACE, itemToAdd);\n    }\n\n    public updateAsset(id: any, itemToUpdate: any): Observable<CustomForm> {\n      return this.dataService.update(this.NAMESPACE, id, itemToUpdate);\n    }\n\n    public deleteAsset(id: any): Observable<CustomForm> {\n      return this.dataService.delete(this.NAMESPACE, id);\n    }\n\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { Observable } from 'rxjs/Observable';\nimport { FormValue } from '../model/ro.utcluj.clinictrial.trial';\nimport 'rxjs/Rx';\n\n// Can be injected into a constructor\n@Injectable()\nexport class FormValueService {\n\n  private NAMESPACE = 'FormValue';\n\n  constructor(private dataService: DataService<FormValue>) {\n  };\n\n  public getAll(): Observable<FormValue[]> {\n    return this.dataService.getAll(this.NAMESPACE);\n  }\n\n  public getAsset(id: any): Observable<FormValue> {\n    return this.dataService.getSingle(this.NAMESPACE, id);\n  }\n\n  public addAsset(itemToAdd: any): Observable<FormValue> {\n    return this.dataService.add(this.NAMESPACE, itemToAdd);\n  }\n\n  public updateAsset(id: any, itemToUpdate: any): Observable<FormValue> {\n    return this.dataService.update(this.NAMESPACE, id, itemToUpdate);\n  }\n\n  public deleteAsset(id: any): Observable<FormValue> {\n    return this.dataService.delete(this.NAMESPACE, id);\n  }\n\n}\n","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { Observable } from 'rxjs/Observable';\nimport { ProtocolFile } from '../model/ro.utcluj.clinictrial.trial';\nimport 'rxjs/Rx';\n\n// Can be injected into a constructor\n@Injectable()\nexport class ProtocolFileService {\n\n\t\n\t\tprivate NAMESPACE: string = 'ProtocolFile';\n\t\n\n\n\n    constructor(private dataService: DataService<ProtocolFile>) {\n    };\n\n    public getAll(): Observable<ProtocolFile[]> {\n        return this.dataService.getAll(this.NAMESPACE);\n    }\n\n    public getAsset(id: any): Observable<ProtocolFile> {\n      return this.dataService.getSingle(this.NAMESPACE, id);\n    }\n\n    public addAsset(itemToAdd: any): Observable<ProtocolFile> {\n      return this.dataService.add(this.NAMESPACE, itemToAdd);\n    }\n\n    public updateAsset(id: any, itemToUpdate: any): Observable<ProtocolFile> {\n      return this.dataService.update(this.NAMESPACE, id, itemToUpdate);\n    }\n\n    public deleteAsset(id: any): Observable<ProtocolFile> {\n      return this.dataService.delete(this.NAMESPACE, id);\n    }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Headers } from '@angular/http';\nimport 'rxjs/Rx';\nimport { Researcher } from '../model/ro.utcluj.clinictrial.base';\nimport { AccountType, AuthenticationVO } from '../model/ro.utcluj.vo';\nimport { IdProviderService } from '../utils/id-provider.service';\nimport { Utils } from '../utils/utils';\nimport { Configuration } from './configuration';\nimport { ResearcherService } from './researcher.service';\n\n\n\n// Can be injected into a constructor\n@Injectable()\nexport class AuthService {\n\n    private resolveSuffix: string = '?resolve=true';\n    private actionUrl: string;\n    private headers: Headers;\n    private userUrl;\n    private IDENTITY_API = \"system/identities/issue\";\n    private PING_API = \"system/ping\";\n    private LOGOUT_API = \"auth/logout\"\n    private WALLET_API = \"wallet\";\n    private WALLET_IMPORT_API = \"wallet/import\";\n\n    private RESEARCHER_NAMESPACE = \"ro.utcluj.clinictrial.base.Researcher#\";\n\n    private user: AuthenticationVO;\n\n    constructor(\n        private http: HttpClient,\n        private _configuration: Configuration,\n        private _idProvider: IdProviderService,\n        private _researcherService: ResearcherService\n\n    ) {\n        this.actionUrl = _configuration.AdminServerWithApiUrl;\n        this.userUrl = _configuration.ServerWithApiUrl;\n        this.headers = new Headers();\n        this.headers.append('Content-Type', 'application/json');\n        this.headers.append('Accept', 'application/json');\n    }\n\n    getUser() {\n        var user = localStorage.getItem(Utils.USERNAME);\n        //console.log(user);\n        return user;\n    }\n\n    storeUserInfo(user: string) {\n        if (user.includes('Researcher')) {\n            localStorage.setItem(Utils.USER_ROLE, AccountType.RESEARCHER.toLocaleString())\n            var uid = user.replace(this.RESEARCHER_NAMESPACE, \"\");\n            localStorage.setItem(Utils.UID, uid)\n            this._researcherService.getparticipant(uid).subscribe(\n                (res: Researcher) => {\n                    var displayName = res.person.firstName + \" \" + res.person.lastName;\n                    localStorage.setItem(Utils.USERNAME, displayName);\n                }\n            )\n\n        }\n    }\n\n    clearUserInfo(){\n        localStorage.removeItem(Utils.USERNAME);\n        localStorage.removeItem(Utils.USER_ROLE);\n        localStorage.removeItem(Utils.UID);\n    }\n\n    getCurrentUserData() {\n        return this.http.get(this.userUrl + this.PING_API, { withCredentials: true });\n    }\n\n    logout() {\n        return this.http.get(\"http://localhost:3000/auth/logout\", { withCredentials: true }).subscribe(\n            (res) => {\n                console.log(\"Logged out... Clearing cookies...\");\n                this.clearUserInfo();\n            },\n            (err) => {\n                console.log(\"Logged out... Clearing cookies...\");\n                this.clearUserInfo();\n            }\n        )\n    }\n}","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Configuration {\n    public ApiIP: string = \"http://localhost\";\n    public ApiPort: string = \"3001\";\n    public AdminApiPort: string = \"3001\";\n    public Server: string = this.ApiIP+\":\"+this.ApiPort;\n    public AdminServer: string = this.ApiIP+\":\"+this.AdminApiPort;\n    public ApiUrl: string = \"/api/\";\n    public ServerWithApiUrl = this.Server + this.ApiUrl;\n    public AdminServerWithApiUrl = this.AdminServer + this.ApiUrl; \n}\n","\nimport { throwError as observableThrowError, Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\nimport { Configuration } from './configuration';\n\n@Injectable()\nexport class DataService<Type> {\n    private resolveSuffix: string = '?resolve=true';\n    private includeSuffix: string = '?filter={\"include\":\"resolve\"}';\n    private actionUrl: string;\n    private headers: HttpHeaders;\n\n    constructor(private http: HttpClient, private _configuration: Configuration) {\n        this.actionUrl = _configuration.ServerWithApiUrl;\n        this.headers = new HttpHeaders();\n        this.headers.append('Content-Type', 'application/json');\n        this.headers.append('Accept', 'application/json');\n\n    }\n\n    public getAll(ns: string): Observable<Type[]> {\n        console.log('GetAll ' + ns + ' to ' + this.actionUrl + ns, this.headers);\n        return this.http.get<Type[]>(`${this.actionUrl}${ns}` + this.includeSuffix,{ withCredentials: true });\n    }\n\n    public getSingle(ns: string, id: string): Observable<Type> {\n        console.log('GetSingle ' + ns);\n\n        return this.http.get<Type>(this.actionUrl + ns + '/' + id + this.includeSuffix, { withCredentials: true });\n    }\n\n    public getSingleUnresolved(ns: string, id: string): Observable<Type> {\n        console.log('GetSingle ' + ns);\n\n        return this.http.get<Type>(this.actionUrl + ns + '/' + id, { withCredentials: true });\n    }\n\n    public add(ns: string, asset: Type): Observable<Type> {\n        console.log('Entered DataService add');\n        console.log('Add ' + ns);\n        console.log('asset', asset);\n\n        return this.http.post<Type>(this.actionUrl + ns, asset, { withCredentials: true });\n    }\n\n    public update(ns: string, id: string, itemToUpdate: Type): Observable<Type> {\n        console.log('Update ' + ns);\n        console.log('what is the id?', id);\n        console.log('what is the updated item?', itemToUpdate);\n        console.log('what is the updated item?', JSON.stringify(itemToUpdate));\n        return this.http.put<Type>(`${this.actionUrl}${ns}/${id}`, itemToUpdate, { withCredentials: true });\n    }\n\n    public delete(ns: string, id: string): Observable<Type> {\n        console.log('Delete ' + ns);\n\n        return this.http.delete<Type>(this.actionUrl + ns + '/' + id, { withCredentials: true });\n    }\n\n    private handleError(error: any): Observable<string> {\n        // In a real world app, we might use a remote logging infrastructure\n        // We'd also dig deeper into the error to get a better message\n        let errMsg = (error.message) ? error.message :\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        console.error(errMsg); // log to console instead\n        return observableThrowError(errMsg);\n    }\n\n    private extractData(res: Response): any {\n        return res.json();\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { Observable } from 'rxjs';\nimport { Researcher } from '../model/ro.utcluj.clinictrial.base';\nimport 'rxjs/Rx';\nimport { SystemService } from './system-service';\nimport { HistorianRecord } from '../model/org.hyperledger.composer.system';\n\n// Can be injected into a constructor\n@Injectable()\nexport class HistorianService {\n\n\n  private NAMESPACE: string = 'system/historian';\n\n\n\n\n  constructor(\n    private dataService: DataService<HistorianRecord>,\n    private systemService: SystemService\n  ) {\n  };\n\n  public getAll(): Observable<HistorianRecord[]> {\n    return this.dataService.getAll(this.NAMESPACE);\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { Observable } from 'rxjs';\nimport { Patient } from '../model/ro.utcluj.clinictrial.base';\nimport 'rxjs/Rx';\n\n// Can be injected into a constructor\n@Injectable()\nexport class PatientService {\n\n\t\n\t\tprivate NAMESPACE: string = 'Patient';\n\t\n\n\n\n    constructor(private dataService: DataService<Patient>) {\n    };\n\n    public getAll(): Observable<Patient[]> {\n        return this.dataService.getAll(this.NAMESPACE);\n    }\n\n    public getAsset(id: any): Observable<Patient> {\n      return this.dataService.getSingle(this.NAMESPACE, id);\n    }\n\n    public addAsset(itemToAdd: any): Observable<Patient> {\n      return this.dataService.add(this.NAMESPACE, itemToAdd);\n    }\n\n    public updateAsset(id: any, itemToUpdate: any): Observable<Patient> {\n      return this.dataService.update(this.NAMESPACE, id, itemToUpdate);\n    }\n\n    public deleteAsset(id: any): Observable<Patient> {\n      return this.dataService.delete(this.NAMESPACE, id);\n    }\n\n}","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';  \nimport { QueryService } from './query-service';\nimport { ProtocolFile } from '../../model/ro.utcluj.clinictrial.trial'\nimport 'rxjs/Rx';\nimport { ResourceProvider } from '../../utils/resource-provider';\n\n// Can be injected into a constructor\n@Injectable()\nexport class FilesQueryService {\n    constructor(\n        private _queryService : QueryService<ProtocolFile>,\n    ){\n\n    }\n\n    public findFileByTrial(idTrial: string): Observable<ProtocolFile[]>{\n        var trial = ResourceProvider.newTrialQueryResource(idTrial);\n        return this._queryService.get(\"selectFilesByTrial?trial=\", trial);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport 'rxjs/Rx';\nimport { CustomForm } from '../../model/ro.utcluj.clinictrial.trial';\nimport { ResourceProvider } from '../../utils/resource-provider';\nimport { QueryService } from './query-service';\nimport { FormValue } from '../../model/ro.utcluj.clinictrial.trial';\n\n// Can be injected into a constructor\n@Injectable()\nexport class FormValueQueryService {\n    constructor(\n        private _queryService: QueryService<FormValue>,\n    ) {\n\n    }\n\n\n    public findDataForCustomForm(idForm: string): Observable<FormValue[]> {\n        var customForm = ResourceProvider.newCustomFormQueryResource(idForm);\n        return this._queryService.get(\"selectDataForCustomForm?customForm=\", customForm);\n    }\n\n    public findDataForCustomFormAndPatient(idForm: string, idPatient: string): Observable<FormValue[]> {\n        var customForm = ResourceProvider.newCustomFormQueryResource(idForm);\n        var patient = ResourceProvider.newPatientQueryResource(idPatient);\n        return this._queryService.getWithDoubleParam(\"selectDataForCustomFormAndPatient?customForm=\", customForm, patient);\n    }\n\n    public selectDataForPatient(idPatient: string): Observable<FormValue[]> {\n        var patient = ResourceProvider.newPatientQueryResource(idPatient);\n        return this._queryService.get(\"selectDataForPatient?patient=\", patient);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport 'rxjs/Rx';\nimport { CustomForm } from '../../model/ro.utcluj.clinictrial.trial';\nimport { ResourceProvider } from '../../utils/resource-provider';\nimport { QueryService } from './query-service';\nimport { FormValue } from '../../model/ro.utcluj.clinictrial.trial';\n\n// Can be injected into a constructor\n@Injectable()\nexport class FormQueryService {\n    constructor(\n        private _queryService: QueryService<CustomForm>,\n    ) {\n\n    }\n\n    public findCustomFormsByTrial(idTrial: string): Observable<CustomForm[]> {\n        var trial = ResourceProvider.newTrialQueryResource(idTrial);\n        return this._queryService.get(\"selectCustomFormsByTrial?trial=\", trial);\n    }\n}\n","\nimport {throwError as observableThrowError,  Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\nimport { HttpClient }from '@angular/common/http';\n\n\nimport { Configuration } from '../configuration';\n\n@Injectable()\nexport class QueryService<Type> {\n    private resolveSuffix: string = '?resolve=true';\n    private actionUrl: string;\n    private headers: Headers;\n\n    constructor(private http: HttpClient, private _configuration: Configuration) {\n        this.actionUrl = _configuration.ServerWithApiUrl;\n        this.headers = new Headers();\n        this.headers.append('Content-Type', 'application/json');\n        this.headers.append('Accept', 'application/json');\n    }\n\n\n    public get(query: string, param: string): Observable<Type[]> {\n        console.log(\"Executing query ... \")\n        console.log(\"param: \" + param)\n        console.log(`${this.actionUrl}queries/${query}${param}`) \n        return this.http.get<Type[]>(`${this.actionUrl}queries/${query}${param}`,{ withCredentials: true });\n    }\n\n    public getWithDoubleParam(query: string, param: string, secondParam: string): Observable<Type[]> {\n        console.log(\"Executing query ... \")\n        console.log(\"param1: \" + param)\n        console.log(\"param1: \" + secondParam)\n        console.log(`${this.actionUrl}queries/${query}${param}&${secondParam}`) \n        return this.http.get<Type[]>(`${this.actionUrl}queries/${query}${param}&${secondParam}`,{ withCredentials: true });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { Observable } from 'rxjs';\nimport { Researcher } from '../model/ro.utcluj.clinictrial.base';\nimport 'rxjs/Rx';\nimport { SystemService } from './system-service';\n\n// Can be injected into a constructor\n@Injectable()\nexport class ResearcherService {\n\n\n  private NAMESPACE: string = 'Researcher';\n\n\n\n\n  constructor(\n    private dataService: DataService<Researcher>,\n    private systemService: SystemService\n  ) {\n  };\n\n  public getAll(): Observable<Researcher[]> {\n    return this.dataService.getAll(this.NAMESPACE);\n  }\n\n  public getparticipant(id: any): Observable<Researcher> {\n    return this.dataService.getSingle(this.NAMESPACE, id);\n  }\n\n  public getparticipantAdmin(id: any): Observable<Researcher> {\n    return this.systemService.getSingle(this.NAMESPACE, id);\n\n  }\n  \n  public addParticipant(itemToAdd: any): Observable<Researcher> {\n    return this.dataService.add(this.NAMESPACE, itemToAdd);\n  }\n\n  public updateParticipant(id: any, itemToUpdate: any): Observable<Researcher> {\n    return this.dataService.update(this.NAMESPACE, id, itemToUpdate);\n  }\n\n  public deleteParticipant(id: any): Observable<Researcher> {\n    return this.dataService.delete(this.NAMESPACE, id);\n  }\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Headers } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/Rx';\nimport { Configuration } from './configuration';\nimport { AuthenticationVO } from '../model/ro.utcluj.vo';\n\n\n\n// Can be injected into a constructor\n@Injectable()\nexport class SystemService {\n\n    private resolveSuffix: string = '?resolve=true';\n    private actionUrl: string;\n    private headers: Headers;\n    private userUrl;\n    private IDENTITY_API = \"system/identities/issue\";\n    private PING_API = \"system/ping\";\n    private WALLET_API = \"wallet\";\n    private WALLET_IMPORT_API = \"wallet/import\";\n\n\n    constructor(private http: HttpClient, private _configuration: Configuration) {\n        this.actionUrl = _configuration.AdminServerWithApiUrl;\n        this.userUrl = _configuration.ServerWithApiUrl;\n        this.headers = new Headers();\n        this.headers.append('Content-Type', 'application/json');\n        this.headers.append('Accept', 'application/json');\n    }\n    \n    getCurrentUser() {\n        return this.http.get(this.userUrl + this.PING_API, { withCredentials: true }).toPromise()\n            .then((data) => {\n                return data['participant'];\n            });\n    }\n\n    checkWallet() {\n        return this.http.get(this.userUrl + this.WALLET_API, { withCredentials: true }).toPromise();\n    }\n\n    bindIdentity(identity) {\n        console.log(\"Issuing identity...\");\n        return this.http.post(this.actionUrl + this.IDENTITY_API, identity, { responseType: 'blob' })\n            .toPromise().then(\n                (identityCard) => {\n                    console.log(\"Obtained identity card from server...\");\n                    console.log(identityCard);\n                    const file = new File([identityCard], 'myCard.card', { type: 'application/octet-stream', lastModified: Date.now() });\n                    console.log(\"Created card file...\");\n                    const formData = new FormData();\n                    formData.append('card', file);\n\n                    const headers = new HttpHeaders();\n                    headers.set('Content-Type', 'multipart/form-data');\n                    this.http.post(this.userUrl + this.WALLET_IMPORT_API, formData, {\n                        withCredentials: true,\n                        headers\n                    }).subscribe(\n                        (res)=>{\n                            console.log(\"Card imported successfully...\");\n                        },\n                        (err)=>{\n                            console.log(\"Failed to import card\");\n                            alert(\"Failed to bind identity\");\n                        }\n                    )\n                }\n            )\n    }\n\n    public getSingle(ns: string, id: string): Observable<any> {\n        console.log('Admin GetSingle ' + ns);\n\n        return this.http.get<any>(this.actionUrl + ns + '/' + id + this.resolveSuffix);\n    }\n\n    private add(ns: string, asset): Observable<any> {\n        console.log('Add ' + ns);\n        console.log('asset', asset);\n\n        return this.http.post<any>(this.actionUrl + ns, asset);\n    }\n}","/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { Observable } from 'rxjs/Observable';\nimport { AddResearcherToTrial } from '../model/transaction';\nimport { EnrolPatientTransaction } from '../model/transaction';\nimport { RegisterTrialTransaction } from '../model/transaction';\nimport { RemoveResearcherFromTrial } from '../model/transaction';\nimport 'rxjs/Rx';\nimport { AddFormData, CreateCustomForm } from '../model/ro.utcluj.clinictrial.trial';\n\n// Can be injected into a constructor\n@Injectable()\nexport class TransactionService {\n\n    private ADD_RESEARCHER_TO_TRIAL = 'AddResearcherToTrial';\n    private ENROL_PATIENT_TRANSACTION = 'EnrolPatientTransaction'\n    private REGISTER_TRIAL_TRANSACTION = 'RegisterTrialTransaction';\n    private REMOVE_RESEARCHER_FROM_TRIAL = 'RemoveResearcherFromTrial';\n    private ADD_FORM_DATA = 'AddFormData'\n    private CREATE_CUSTOM_FORM = 'CreateCustomForm';\n\n    constructor(private dataService: DataService<any>) {\n    };\n\n    public addResearcherToTrial(tx: any): Observable<AddResearcherToTrial> {\n        return this.dataService.add(this.ADD_RESEARCHER_TO_TRIAL, tx);\n    }\n\n    public enrolPatientTransaction(tx: any): Observable<EnrolPatientTransaction> {\n        return this.dataService.add(this.ENROL_PATIENT_TRANSACTION, tx);\n    }\n\n    public registerTrialTransaction(tx: any): Observable<RegisterTrialTransaction> {\n        return this.dataService.add(this.REGISTER_TRIAL_TRANSACTION, tx);\n    }\n\n    public removeResearcherFromTrial(tx: any): Observable<RemoveResearcherFromTrial> {\n        return this.dataService.add(this.REMOVE_RESEARCHER_FROM_TRIAL, tx);\n    }\n\n    public addFormData(tx: any): Observable<AddFormData> {\n        return this.dataService.add(this.ADD_FORM_DATA, tx);\n    }\n\n    public createCustomForm(tx: CreateCustomForm): Observable<CreateCustomForm> {\n        return this.dataService.add(this.CREATE_CUSTOM_FORM, tx);\n    }\n\n    \n}\n\n","import { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { Observable } from 'rxjs';\nimport { Trial } from '../model/ro.utcluj.clinictrial.trial';\nimport 'rxjs/Rx';\n\n// Can be injected into a constructor\n@Injectable()\nexport class TrialService {\n\n\t\n\t\tprivate NAMESPACE: string = 'Trial';\n\t\n\n\n\n    constructor(private dataService: DataService<Trial>) {\n    };\n\n    public getAll(): Observable<Trial[]> {\n        return this.dataService.getAll(this.NAMESPACE);\n    }\n\n    public getAsset(id: any): Observable<Trial> {\n      return this.dataService.getSingle(this.NAMESPACE, id);\n    }\n\n    public getAssetUnresolved(id: any): Observable<Trial> {\n      return this.dataService.getSingleUnresolved(this.NAMESPACE, id);\n    }\n\n    public addAsset(itemToAdd: any): Observable<Trial> {\n      return this.dataService.add(this.NAMESPACE, itemToAdd);\n    }\n\n    public updateAsset(id: any, itemToUpdate: any): Observable<Trial> {\n      return this.dataService.update(this.NAMESPACE, id, itemToUpdate);\n    }\n\n    public deleteAsset(id: any): Observable<Trial> {\n      return this.dataService.delete(this.NAMESPACE, id);\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class IdProviderService{\n    //generate a random id for new patients\n    generateID() {\n        var id = \"\";\n        for(var i = 0; i < 4; i++){\n            id += Math.random().toString(36).slice(-4);\n        }\n        return id;\n    }\n}","\nexport class ResourceProvider {\n    //defines the name of th research site resource => used to define relationships\n    private static RESEARCH_SITE_RESOURCE = \"ro.utcluj.clinictrial.organisation.ResearchSite#\";\n    private static TRIAL_RESOURCE = \"ro.utcluj.clinictrial.trial.Trial#\";\n    private static CUSTOM_FORM_RESOURCE = \"ro.utcluj.clinictrial.trial.CustomForm#\";\n    private static PATIENT_RESOURCE = \"resource:ro.utcluj.clinictrial.base.Patient#\";\n    private static RESEARCHER_RESORCE = \"resource:ro.utcluj.clinictrial.base.Researcher#\"\n    private static PATIENT_QUERY_REF = \"ro.utcluj.clinictrial.base.Patient%23\";\n    private static TRIAL_QUERY = \"ro.utcluj.clinictrial.trial.Trial%23\";\n    private static CUSTOM_FORM_QUERY = \"ro.utcluj.clinictrial.trial.CustomForm%23\";\n    private static RESOURCE_QUERY_REF = \"resource%3A\";\n\n    public static newResearchSiteResource(idResearchSite): string {\n        return this.RESEARCH_SITE_RESOURCE + idResearchSite;\n    }\n\n    public static newTrialResource(idTrial): string {\n        return this.TRIAL_RESOURCE + idTrial;\n    }\n\n    public static newTrialQueryResource(idTrial): string {\n        return this.RESOURCE_QUERY_REF + this.TRIAL_QUERY + idTrial;\n    }\n\n    public static newPatientResource(idPatient): string {\n        return this.PATIENT_RESOURCE + idPatient;\n    }\n\n    public static newPatientQueryResource(idPatient): string {\n        return this.RESOURCE_QUERY_REF + this.PATIENT_QUERY_REF + idPatient;\n    }\n\n    public static newCustomFormResource(idForm): string {\n        return this.CUSTOM_FORM_RESOURCE + idForm;\n    }\n\n    public static newCustomFormQueryResource(idForm): string {\n        return this.RESOURCE_QUERY_REF + this.CUSTOM_FORM_QUERY + idForm;\n    }\n\n    public static newResearcherResource(idResearcher): string {\n        return this.RESEARCHER_RESORCE + idResearcher;\n    }\n}","\nexport class Utils {\n    public static USERNAME = \"username\";\n    public static UID = \"uid\";\n    public static USER_ROLE = \"role\";  \n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}
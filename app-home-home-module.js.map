{"version":3,"sources":["webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/home.routing.ts","webpack:///./src/app/home/login.component.html","webpack:///./src/app/home/login.component.ts","webpack:///./src/app/home/patient-view/patient-view.component.html","webpack:///./src/app/home/patient-view/patient-view.component.ts"],"names":[],"mappings":"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","file":"app-home-home-module.js","sourcesContent":["module.exports = \"<br/>\\n<br/>\\n<br/>\\n<div class=\\\"center-div\\\" *ngIf=\\\"identityAdd\\\">\\n    <h2>No identity binded to the account wallet. Please enter a participation ID provided by your orgnisation</h2>\\n</div>\\n<br/>\\n<div class=\\\"center-div\\\" *ngIf=\\\"identityAdd\\\">\\n    <mat-form-field class=\\\"input-field-width\\\">\\n        <input matInput type=\\\"text\\\" placeholder=\\\"ParticipantID\\\" [(ngModel)]=\\\"idParticipant\\\">\\n    </mat-form-field>\\n</div>\\n<br/>\\n<div class=\\\"center-div\\\" *ngIf=\\\"identityAdd\\\">\\n    <h4>Choose the identity type:</h4>\\n    <br/>\\n</div>\\n<div class=\\\"center-div\\\" *ngIf=\\\"identityAdd\\\">\\n\\n    <mat-radio-group [(ngModel)]=\\\"identityType\\\">\\n        <mat-radio-button value=\\\"researcher\\\">Researcher </mat-radio-button>\\n        <br/>\\n        <mat-radio-button value=\\\"agent\\\">Regulatory Agent </mat-radio-button>\\n        <br/>\\n        <mat-radio-button value=\\\"sponsor\\\">Sponsor </mat-radio-button>\\n        <br/>\\n    </mat-radio-group>\\n</div>\\n<br/>\\n<div class=\\\"center-div\\\" *ngIf=\\\"identityAdd\\\">\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\">Bind</button>\\n</div>\\n\\n\\n<div class=\\\"center-div\\\" *ngIf=\\\"!identityAdd\\\">\\n    <mat-card class=\\\"description-card-small\\\">\\n        <mat-card-header>\\n            <h2>\\n                Current identity\\n            </h2>\\n        </mat-card-header>\\n        <mat-card-content>\\n            {{setIdentity}}\\n        </mat-card-content>\\n    </mat-card>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SystemService } from '../service/system-service'\nimport { ResearcherService } from '../service/researcher.service';\nimport { Researcher } from '../model/ro.utcluj.clinictrial.base';\nimport { AuthService } from '../service/auth.service';\nimport { LoaderService } from '../components/loader/loader.service';\n\n@Component({\n  selector: 'home-component',\n  templateUrl: 'home.component.html'\n})\nexport class HomeComponent implements OnInit {\n  identityAdd = false;\n  idParticipant = \"\";\n  identityType: string;\n  setIdentity;\n  identities = [];\n  constructor(\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _systemService: SystemService,\n    private _researcherService: ResearcherService,\n    private _authService: AuthService,\n    private _loaderService: LoaderService\n  ) {\n    var result = this._route.params\n      .subscribe(params => {\n        var res = params['loggedIn'];\n\n        this._systemService.checkWallet().then(\n          (res) => {\n            console.log(res);\n            if (res['length'] == 0) {\n              console.log(\"No identities defined in wallet. Asking for an identity\")\n              this.identityAdd = true;\n              this._loaderService.hide();\n              this.identities.concat(res);\n\n            } else {\n              this._systemService.getCurrentUser().then(\n                (res) => {\n                  console.log(res)\n                  this._authService.storeUserInfo(res);\n                  this.identityAdd = false;\n                  this._loaderService.hide();\n                }\n              )\n            }\n          }\n        )\n      })\n  }\n  ngOnInit() {\n    this.identityAdd = false;\n  }\n\n  onSubmit() {\n    this._loaderService.show();\n    this.idParticipant = this.idParticipant.trim();\n    if (!this.identityType) {\n      alert(\"Please choose the type of identity!\")\n      return;\n    }\n    if (this.idParticipant == \"\") {\n      alert(\"Participant ID cannot be empty!\");\n      return;\n    }\n    console.log(\"Binding identity to account...\");\n    console.log(this.idParticipant);\n    console.log(this.identityType)\n    if (this.identityType == \"researcher\") {\n      console.log(\"Selected researcher option\")\n      this._researcherService.getparticipantAdmin(this.idParticipant).subscribe(\n        (participant) => {\n          console.log(\"Found participant ...\")\n          console.log(participant);\n          console.log(\"Biniding to wallet...\")\n          this._systemService\n            .bindIdentity(this.createResearcherIdentity(participant)).then(\n              (res) => {\n                this._loaderService.hide();\n                console.log(\"Checking if default identity is set...\");\n                this._systemService.getCurrentUser().then(\n                  (res) => {\n                    console.log(\"Seting cookies...\")\n                    this._authService.storeUserInfo(res);\n                    console.log(\"Reinitializing...\");\n                    this._router.navigate([this._router.url])\n                  }\n                )\n              }\n            )\n        },\n        (err)=>{\n          this._loaderService.hide();\n          alert(\"Cannot bind identity\");\n        }\n      )\n    } else if (this.identityType == \"agent\") {\n\n    } else if (this.identityType == \"sponsor\") {\n\n    }\n\n  }\n\n  createResearcherIdentity(researcher: Researcher) {\n    const identity = {\n      participant: 'ro.utcluj.clinictrial.base.Researcher#' + researcher.idResearcher,\n      userID: researcher.idResearcher,\n      options: {}\n    };\n    return identity;\n  }\n\n  bindAccount() {\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppMaterialModule } from '../material.module';\nimport { ResearcherService } from '../service/researcher.service';\nimport { HomeComponent } from './home.component';\nimport { HomeRoutingModule } from './home.routing';\nimport { LoginComponent } from './login.component';\nimport { PatientViewComponent } from './patient-view/patient-view.component'\nimport { PatientService } from '../service/patient.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    AppMaterialModule,\n    FormsModule\n  ],\n  declarations: [\n    HomeComponent,\n    LoginComponent,\n    PatientViewComponent\n  ],\n  providers: [\n    ResearcherService,\n    PatientService\n  ]\n})\nexport class HomeModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home.component';\nimport { LoginComponent } from './login.component';\nimport { PatientViewComponent } from './patient-view/patient-view.component';\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'view/:idPatient', component: PatientViewComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","module.exports = \"<div style=\\\"padding: 10em 0;\\\">\\n    <a style=\\\"display: table;\\n    margin: 0 auto;\\\" (click)=\\\"loginAnimation()\\\" mat-raised-button href=\\\"http://localhost:3000/auth/github\\\">Sign in with GitHub</a>\\n</div>\"","import { Component } from '@angular/core';\nimport { LoaderService } from '../components/loader/loader.service';\nimport { AuthService } from '../service/auth.service';\n@Component({\n    selector: 'login',\n    templateUrl: 'login.component.html',\n    styles: []\n})\nexport class LoginComponent {\n    constructor(\n        private _loaderService: LoaderService,\n        private _authService: AuthService\n    ){\n        _authService.clearUserInfo();\n    }\n\n    loginAnimation(){\n        this._loaderService.show();\n    }\n\n}\n","module.exports = \"<div *ngIf=\\\"isInitialised\\\">\\n    <div class=\\\"center-div\\\">\\n        <mat-card style= \\\"width:35%; height: 75vh;\\\">\\n            <mat-card-header>\\n                <mat-card-title><h1>Patient Overview</h1></mat-card-title>\\n                <mat-card-subtitle><h2>{{patient.person.firstName}} {{patient.person.lastName}}</h2></mat-card-subtitle>\\n\\n            </mat-card-header>\\n            <mat-card-content>\\n                <mat-divider></mat-divider>\\n                <br/>\\n                Gender:&nbsp; {{patient.person.gender}}\\n                <br/>\\n                <br/>\\n                <mat-divider></mat-divider><br/>\\n                Address:&nbsp; {{patient.person.contactDetails.address.country}}, {{patient.person.contactDetails.address.city}}, {{patient.person.contactDetails.address.region}}, {{patient.person.contactDetails.address.street}}\\n                <br/><br/>\\n                <mat-divider></mat-divider><br/>\\n                E-mail:&nbsp; {{patient.person.contactDetails.email}}\\n                <br/><br/>\\n                <mat-divider></mat-divider><br/>\\n                Phone:&nbsp; {{patient.person.contactDetails.mobilePhone}}\\n                <br/><br/>\\n                <mat-divider></mat-divider><br/>\\n                Birthdate:&nbsp; {{formattedBirthdate.toLocaleDateString()}}\\n                <br/><br/>\\n                <mat-divider></mat-divider><br/>\\n                Age:&nbsp; {{age}}\\n                <br/><br/>\\n                <mat-divider></mat-divider><br/>\\n                Place of birth:&nbsp; {{patient.person.birthDetails.placeOfBirth}}\\n                <br/><br/>\\n                <mat-divider></mat-divider>\\n            </mat-card-content>\\n        </mat-card>\\n        &nbsp;\\n        <mat-card style= \\\"width: 65%; height: 75vh;\\\">\\n            <mat-card-header>\\n                <mat-card-title><h2>Patient History</h2></mat-card-title>\\n                \\n            </mat-card-header>\\n            <mat-card-content>\\n\\n            </mat-card-content>\\n        </mat-card>\\n   </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Patient } from '../../model/ro.utcluj.clinictrial.base';\nimport { PatientService } from '../../service/patient.service';\nimport { FormValueQueryService } from '../../service/queries/form-value-query-service';\nimport { FormValue } from '../../model/ro.utcluj.clinictrial.trial';\n\n@Component({\n    selector: 'patient-view',\n    templateUrl: 'patient-view.component.html'\n})\nexport class PatientViewComponent implements OnInit {\n\n    @Input() idTrial: string;\n\n    private idPatient: string;\n    private patient: Patient;\n    private isInitialised = false;\n    private formattedBirthdate: Date;\n    private age;\n    private formValues: FormValue[] = [];\n    constructor(\n        private _patientService: PatientService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dataQueryService: FormValueQueryService\n    ) {\n        var id = this._route.params\n            .subscribe(params => {\n                var id = params['idPatient'];\n                this.idPatient = id;\n                console.log(id);\n                //decide if the user wants to edit an existing patient or add a new one\n                if (!id) {\n                    alert(\"Patient not found!\")\n                    return;\n                } else {\n                    this._patientService.getAsset(this.idPatient).subscribe(\n                        (res) => {\n                            this.patient = res;\n                            this.formattedBirthdate = new Date(this.patient.person.birthDetails.dateOfBirth);\n                            console.log(this.formattedBirthdate);\n                            this.age = this.getAge(this.formattedBirthdate);\n                            this._dataQueryService.selectDataForPatient(this.patient.idPatient).subscribe(\n                                (values)=>{\n                                    console.log(values);\n                                    this.formValues = values;\n                                }\n                            )\n                            \n                            this.isInitialised = true;\n                            console.log(this.patient);\n\n                        }\n                    )\n\n\n                }\n            })\n    }\n\n    ngOnInit() {\n\n    }\n\n    getAge(birthday) {\n        return ~~((Date.now() - birthday) / (31557600000));\n    }\n}"],"sourceRoot":""}